<?php



/**
 * This class defines the structure of the 'impresion' table.
 *
 *
 * This class was autogenerated by Propel 1.5.6 on:
 *
 * Thu Feb 20 13:36:21 2014
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    propel.generator.lib.model.map
 */
class ImpresionTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.ImpresionTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('impresion');
		$this->setPhpName('Impresion');
		$this->setClassname('Impresion');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		$this->setPrimaryKeyMethodInfo('impresion_id_seq');
		// columns
		$this->addPrimaryKey('ID', 'Id', 'BIGINT', true, null, null);
		$this->addColumn('VOLUMEN', 'Volumen', 'INTEGER', false, null, null);
		$this->addForeignKey('ID_EDICION', 'IdEdicion', 'INTEGER', 'edicion', 'ID', false, null, null);
		$this->addForeignKey('ID_TIPOCARATULA', 'IdTipocaratula', 'INTEGER', 'tipocaratula', 'ID', false, null, null);
		$this->addForeignKey('ID_TIPOIMPRESION', 'IdTipoimpresion', 'INTEGER', 'tipoimpresion', 'ID', false, null, null);
		$this->addForeignKey('ID_TIPOENCUADERNACION', 'IdTipoencuadernacion', 'INTEGER', 'tipoencuadernacion', 'ID', false, null, null);
		$this->addColumn('COSTO', 'Costo', 'VARCHAR', false, 255, null);
		$this->addForeignKey('ID_TIPOTRIPA', 'IdTipotripa', 'INTEGER', 'tipotripa', 'ID', false, null, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('Edicion', 'Edicion', RelationMap::MANY_TO_ONE, array('id_edicion' => 'id', ), null, 'CASCADE');
    $this->addRelation('Tipocaratula', 'Tipocaratula', RelationMap::MANY_TO_ONE, array('id_tipocaratula' => 'id', ), null, 'CASCADE');
    $this->addRelation('Tipoimpresion', 'Tipoimpresion', RelationMap::MANY_TO_ONE, array('id_tipoimpresion' => 'id', ), null, 'CASCADE');
    $this->addRelation('Tipoencuadernacion', 'Tipoencuadernacion', RelationMap::MANY_TO_ONE, array('id_tipoencuadernacion' => 'id', ), null, 'CASCADE');
    $this->addRelation('Tipotripa', 'Tipotripa', RelationMap::MANY_TO_ONE, array('id_tipotripa' => 'id', ), null, 'CASCADE');
    $this->addRelation('Historico', 'Historico', RelationMap::ONE_TO_MANY, array('id' => 'id_impresion', ), null, 'CASCADE');
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // ImpresionTableMap
